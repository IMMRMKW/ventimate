esphome:
  name: eps32s3ventimate
  friendly_name: Ventimate

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret ha_api_key

ota:
  - platform: esphome

wifi:
  id: esp_wifi
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Ventimate"
    password: "your_password"

captive_portal:

##### USB Power Delivery #####
external_components:
  - source:
      type: git
      url: https://github.com/IMMRMKW/esphome-usb-powerdelivery.git
      ref: main
    components: fusb302
    refresh: 10s
  - source:
      type: local
      path: components
    components: [airpurifier, aqdisplay, aqi, myfan]
 # - source:
 #     type: git
 #     url: https://github.com/IMMRMKW/ventimate
 #     ref: main
 #   components: [ my_component1, calibrated_CO2 ] 
 #   refresh: 10s

fusb302:
  maximum_supply_voltage: 9v
  interrupt_pin: GPIO16
  
  
##### Hardware ports #####

# For BME280/BME680 and other retrofitted sensor
i2c:
  sda: GPIO2
  scl: GPIO1

uart:
# For PMS5003 particle sensor
  - id: PMS_uart
    tx_pin: GPIO43
    rx_pin: GPIO44
    baud_rate: 9600

# Uncomment when using MH-Z19C CO2 sensor or similar.
# For MH-Z19C CO2 sensor
  # - id: MHZ19_uart
  #   tx_pin: GPIO25
  #   rx_pin: GPIO26
  #   baud_rate: 9600

##### Sensors #####

bme68x_bsec2_i2c:
  address: 0x77
  model: bme680
  operating_age: 28d
  sample_rate: LP
  supply_voltage: 3.3V

aqdisplay:
  id: aqmonitor
  sclk_pin: GPIO12
  mosi_pin: GPIO11
  chip_select_pin: GPIO10
  dc_pin: GPIO13
  reset_pin: GPIO14
  sensor_co2_index: co2_index
  sensor_pm_index: pm_index
  sensor_voc_index: voc_index
  sensor_rh: bme680_humidity
  sensor_temp: bme680_temperature
  sensor_fan_power: current_power
  clock: esptime
  network: esp_wifi

airpurifier:
  - platform: myfan
    id: fancyfan
    power_enable_pin: GPIO34
    power_pwm_pin: GPIO33
    fan_pwm_pin: GPIO21
    sensor_pm_index: pm_index
    sensor_voc_index: voc_index
    min_voltage: 3.6
    max_voltage: 10
    purge_interval: 1800
    purge_duration: 30
    power_sensor:
      name: "Current power"
      id: current_power
    switcher:
      name: "manual/auto"
      id: myfanSwitch
      optimistic: true
      on_turn_on:
        then:
          - lambda: |-
              id(fancyfan).set_manual(true);
      on_turn_off:
        then:
          - lambda: |-
              id(fancyfan).set_manual(false);
    max_pwm:
      name: "Max power"
      id: myfanSlider
      min_value: 0
      max_value: 100
      step: 1
      initial_value: 35
      optimistic: true
      on_value:
        then:
          - lambda: |-
              id(fancyfan).set_max_power(x); 



               
switch:
  - platform: gpio
    pin: 
      number: GPIO9
    id: pms_set
    name: "Start measuring PM concentrations"
    internal: true # Don't expose this switch to enable manually

sensor:
  - platform: aqi
    id: air_quality_index
    sensor_co2: scd4x_co2
    sensor_pm_1_0: pmsx003_pm01
    sensor_pm_2_5: pmsx003_pm25
    sensor_pm_10: pmsx003_pm10
    sensor_voc: bvoc
    co2_index:
      name: "CO2 index"
      id: co2_index
      internal: true
    pm_index:
      name: "PM index"
      id: pm_index
      internal: true
    voc_index:
     name: "VOC index"
     id: voc_index
     internal: true

  - platform: bme68x_bsec2
    temperature:
      name: "BME680 Temperature"
      id: bme680_temperature
      sample_rate: lp
      filters:
        - median
    pressure:
      name: "BME680 Pressure"
      id: bme680_pressure
      sample_rate: lp
      filters:
        - median
    humidity:
      name: "BME680 Humidity"
      id: bme680_humidity
      sample_rate: lp
      filters:
        - median
    gas_resistance:
      name: "BME680 Gas Resistance"
      internal: true
      filters:
        - median
    iaq:
      name: "BME680 IAQ"
      id: iaq
      filters:
        - median
    iaq_accuracy:
      name: "BME680 Numeric IAQ Accuracy"
      internal: true
    co2_equivalent:
      name: "BME680 CO2 Equivalent"
      internal: true
      filters:
        - median
    breath_voc_equivalent:
      id: bvoc
      name: "BME680 Breath VOC Equivalent"
      internal: false
      filters:
        - median

  - platform: scd4x
    address: 0x62
    temperature_offset: 3
    update_interval: 5s
    temperature: 
      name: SCD4x Temperature
      internal: true
    humidity:
      name: SCD4x Humidity
      internal: true
    co2: 
      name: SCD4x CO2
      id: scd4x_co2

  - platform: pmsx003
    uart_id: PMS_uart
    type: PMSX003
    pm_1_0:
      name: "PM < 1.0 µm"
      id: pmsx003_pm01
    pm_2_5:
      name: "PM < 2.5 µm"
      id: pmsx003_pm25
    pm_10_0:
      name: "PM < 10.0 µm"
      id: pmsx003_pm10

  # - platform: mhz19
  #   uart_id: MHZ19_uart
  #   co2:
  #     name: "MH-Z19 CO2"
  #   temperature:
  #     name: "MH-Z19 Temperature"
  #   update_interval: 60s
  #   automatic_baseline_calibration: false
    
light:
  - platform: neopixelbus
    type: GRBW
    variant: SK6812
    pin: GPIO42
    num_leds: 12
    name: "rgb_lights"
    id: rgb_lights
    gamma_correct: 1.5
    on_turn_on:
      then:
        - light.turn_on:
            id: rgb_lights
            brightness: 100%
            red: 100%
            green: 43%
            blue: 29%
            white: 100%

##### Outputs #####

output:
  # Heartbeat status LED
  - platform: gpio
    id: statusLED
    pin: GPIO5

##### General #####

time:
  - platform: homeassistant
    id: esptime

interval:
  - interval: 120s
    then:
      - switch.turn_on: pms_set
      - delay: 20s
      - switch.turn_off: pms_set
  # - interval: 1000ms
  #   then:
  #     - output.turn_on: statusLED
  #     - delay: 500ms
  #     - output.turn_off: statusLED



    
    